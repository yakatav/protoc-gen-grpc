<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Google.Protobuf.Reflection" #>
//Generated by Grpc CodeGenerator for Unreal, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "<#=s.TurboLinkBasicFileName#>Client.h"
<#
if(s.ServiceArray.Count>0) {
#>
#include "<#=s.CamelFileName#>Service.generated.h"

class UTurboLinkGrpcManager;
<# 
} 
#>

<#
foreach(GrpcService service in s.ServiceArray)
{
#>
UCLASS(ClassGroup = Grpc, BlueprintType)
class GRPC_API U<#=service.Name#> : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable, Category = TurboLink)
	U<#=service.Name#>Client* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	U<#=service.Name#>Client* InnerClient; 
public:
<#
foreach (GrpcServiceMethod method in service.MethodArray)
{
	if(!method.ClientStreaming) {
#>
	typedef TFunction<void(const FGrpcResult& GrpcResult, const <#=method.OutputType#>& Response)> F<#=method.Name#>ResponseLambda;
<# if(method.ServerStreaming) { #>
	typedef TFunction<void()> F<#=method.Name#>FinishLambda;
	void Call<#=method.Name#>(const <#=method.InputType#>& Request, F<#=method.Name#>ResponseLambda ResponseLambda, F<#=method.Name#>FinishLambda FinishLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);
<#} else {#>
	void Call<#=method.Name#>(const <#=method.InputType#>& Request, F<#=method.Name#>ResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);
<#}#>

<#
	}
}
#>
public:
	class Private;
	Private* const d = nullptr;

public:
	U<#=service.Name#>();
	virtual ~U<#=service.Name#>();
};

<#
}
#>
